#!/usr/bin/env node

/*
 * Installs the environment for mobile flights
 */


/**
 * Module dependencies.
 */

var async = require('async');
var auryn = require('../package.json');
var chalk = require('chalk');
var program = require('commander');


program
  .version(auryn.version)
  .usage('<fomula>')
  .parse(process.argv);


var formula = null;
var fatals = [];
var fixables = [];


try {
  formula = require('../lib/formula/' + program.args[0]);
} catch(err) {
  console.error('no formula named', program.args[0]);
  process.exit(1);
}

function validate(formula, done) {
  async.eachSeries(formula.dependencies || [], validate, function () {
    formula.validate(function (err) {
      if (!!err && !formula.install) fatals.push(formula);
      if (!!err && !!formula.install) fixables.push(formula);

      done();
    });
  });
}


validate(formula, function () {
  if (fatals.length > 0) {
    console.log(
      'Some requirements are missing :\n\n',
      fatals.map(function (fatal) {
        return '  * ' + fatal.label;
      }).join('\n') + '\n'
    );

    process.exit(1);
  } else {
    async.eachSeries(fixables, function (fixable, next) {
      console.log('installing dependency :', chalk.yellow(fixable.label));
      fixable.install(next);
    }, function () {});
  }
});

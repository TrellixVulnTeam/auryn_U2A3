#!/usr/bin/env node

/*
 * Installs the environment for mobile flights
 */


/**
 * Module dependencies.
 */

var async = require('async');
var auryn = require('../package.json');
var chalk = require('chalk');
var program = require('commander');
var readline = require('readline');
var setup = require('../lib/setup');


program
  .version(auryn.version)
  .usage('<fomula>')
  .parse(process.argv);


setup.listDependencies(program.args[0], function (fatals, fixables) {
  if (fatals.length > 0) {
    console.log(
      'Some requirements are missing :\n\n',
      fatals.map(function (fatal) {
        return '  * ' + fatal.label;
      }).join('\n') + '\n'
    );

    process.exit(1);
  } else if (fixables.length > 0) {
    var rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });

    console.log('auryn is about to install:\n');

    fixables.forEach(function (fixable) {
      console.log('  * ' + chalk.yellow(fixable.label));
    });;

    console.log();

    rl.question('Do you accept ? [y/n] ', function (answer) {
      console.log();

      if (answer === 'y') {
        async.eachSeries(fixables, function (fixable, next) {
          console.log('  > install', chalk.yellow(fixable.label));
          fixable.install(next);
        }, function (err) {
          if (err) return console.error('Error:', chalk.red(err.message));
        });
      }

      rl.close();
    })
  } else {
    console.log('Your system is already setup for', chalk.yellow(program.args[0]));
  }
});
